// Generated by CoffeeScript 1.6.3
(function() {
  globe.ParticleBuffer = (function() {
    function ParticleBuffer(particles) {
      this.particles = particles;
      this.firstParticleIndex = 0;
      this.newParticleIndex = 0;
    }

    ParticleBuffer.prototype.allocate = function(items, callback) {
      var item, particle, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = items.length; _i < _len; _i++) {
        item = items[_i];
        particle = this.particles.particles[this.newParticleIndex];
        callback(item, particle);
        _results.push(this.newParticleIndex = (this.newParticleIndex + 1) % this.particles.particles.length);
      }
      return _results;
    };

    ParticleBuffer.prototype.update = function(t, callback) {
      var nextParticleIndex, particle, particleIndex, _results;
      particleIndex = this.firstParticleIndex;
      _results = [];
      while (true) {
        if (particleIndex === this.newParticleIndex) {
          break;
        }
        nextParticleIndex = (particleIndex + 1) % this.particles.particles.length;
        particle = this.particles.particles[particleIndex];
        if (particle.removeT <= t) {
          particle.setOpacity(0);
          if (particle.endT <= t) {
            this.firstParticleIndex = nextParticleIndex;
          }
        } else {
          if (typeof callback === "function") {
            callback(particle);
          }
        }
        _results.push(particleIndex = nextParticleIndex);
      }
      return _results;
    };

    return ParticleBuffer;

  })();

}).call(this);
