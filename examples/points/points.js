// Generated by CoffeeScript 1.3.1
(function() {
  var COLOR_THRESHOLD, LAT_LINES, LNG_LINES, image;

  COLOR_THRESHOLD = 1.19;

  LAT_LINES = 250;

  LNG_LINES = 250;

  image = new Image;

  image.src = '../../natural-earth.jpg';

  image.onload = function() {
    var b, canvas, color, ctx, earth, g, i, lat, lat_line, lng, lng_line, particle, particles, phi, pixels, r, theta, _i, _j, _k, _len, _ref, _ref1;
    canvas = $("<canvas width=" + image.width + " height=" + image.height + "/>")[0];
    ctx = canvas.getContext('2d');
    ctx.drawImage(image, 0, 0);
    pixels = ctx.getImageData(0, 0, canvas.width, canvas.height).data;
    window.sample = function(lng, lat) {
      var b, g, i, r, x, y;
      x = Math.floor((lng / 360 + 0.5) * canvas.width);
      y = Math.floor((lat / -180 + 0.5) * canvas.height);
      i = x * 4 + y * canvas.width * 4;
      r = pixels[i] / 255;
      g = pixels[i + 1] / 255;
      b = pixels[i + 2] / 255;
      return {
        r: r,
        g: g,
        b: b
      };
    };
    window.points = [];
    earth = globe.create();
    earth.init({
      container: document.body,
      atmosphere: false,
      globe: false,
      width: 800,
      height: 800
    });
    for (lat_line = _i = 0; 0 <= LAT_LINES ? _i < LAT_LINES : _i > LAT_LINES; lat_line = 0 <= LAT_LINES ? ++_i : --_i) {
      lat = 180 * (0.5 - lat_line / LAT_LINES);
      for (lng_line = _j = 0; 0 <= LNG_LINES ? _j < LNG_LINES : _j > LNG_LINES; lng_line = 0 <= LNG_LINES ? ++_j : --_j) {
        lng = 360 * (lng_line / LNG_LINES - .5);
        phi = Math.random() * Math.PI * 2;
        theta = Math.acos(Math.random() * 2 - 1);
        _ref = sample(lng, lat), r = _ref.r, g = _ref.g, b = _ref.b;
        color = new THREE.Color(0x00ffff);
        color.setRGB(r, g, b);
        if (r + g > COLOR_THRESHOLD) {
          points.push({
            lat: lat,
            lng: lng,
            color: color
          });
        }
      }
    }
    console.log(points.length);
    particles = earth.createParticles({
      particleCount: points.length,
      size: 2
    });
    for (i = _k = 0, _len = points.length; _k < _len; i = ++_k) {
      _ref1 = points[i], lat = _ref1.lat, lng = _ref1.lng, color = _ref1.color;
      particle = particles.particles[i];
      particle.setPosition(lng, lat);
      particle.setColor(color);
    }
    particles.add();
    earth.setZoomTarget(1200);
    earth.setRotation(Math.PI, 0.7);
    earth.initAnimation();
    earth.observeMouse();
    return console.log('done');
  };

}).call(this);
